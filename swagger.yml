openapi: '3.0.2'
info:
  title: API MyGraph-Builder
  version: '1.0'
servers:
  - url: http://localhost:8000/api
tags:
  - name: admin
    description: Gestione utenti
  - name: app
    description: Gestione grafi
    externalDocs:
      description: Package node-dijkstra
      url: https://www.npmjs.com/package/node-dijkstra

paths:
  /admin/user:
    post:
      tags:
        - admin
      summary: 'Crea un nuovo utente'
      description: L'utente che consuma l'api deve essere registrato, attivo con ruolo 'Amministratore'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Utente'
      responses:
        '201':
          description: Utente creato con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordUtente'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
                schema:
                  properties:
                    message:
                      type: string

  /admin/user/{id}:
    get:
      tags:
        - admin
      summary: Recupera un utente per id
      description: L'utente che consuma l'api deve essere registrato, attivo con ruolo 'Amministratore'
      parameters:
        - name: id
          in: path
          description: ID del'utente da ritornare
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordUtente'
        '404':
          description: NOT FOUND
          content:
            application/json:
                schema:
                  properties:
                    message:
                      type: string
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
                schema:
                  properties:
                    message:
                      type: string

  /admin/user/refill:
    put:
      tags:
        - admin
      summary: Aggiunge credito all'utente con id indicato
      description: L'utente che consuma l'api deve essere registrato, attivo con ruolo 'Amministratore'
      requestBody: 
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Refill'
      responses:
        '200':
          description: Credito ricaricato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordUtente'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
                schema:
                  properties:
                    message:
                      type: string

  /admin/user/{id}/activate:
    put:
      tags:
        - admin
      summary: Attiva l'utente con id indicato
      description: L'utente che consuma l'api deve essere registrato, attivo con ruolo 'Amministratore'
      parameters:
        - name: id
          in: path
          description: ID del'utente da attivare
          required: true
          schema:
            type: integer
            format: int64
      requestBody: 
        required: false
        content:
          application/json: {}
      responses:
        '200':
          description: Utente attivato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordUtente'
        '500':
          description: Errore nel cambio di stato
          content:
            application/json:
                schema:
                  properties:
                    message:
                      type: string

  /admin/user/{id}/deactivate:
    put:
      tags:
        - admin
      summary: Disattiva l'utente con id indicato
      description: L'utente che consuma l'api deve essere registrato, attivo con ruolo 'Amministratore'
      parameters:
        - name: id
          in: path
          description: ID del'utente da disattivare
          required: true
          schema:
            type: integer
            format: int64
      requestBody: 
        required: false
        content:
          application/json: {}
      responses:
        '200':
          description: Utente disattivato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordUtente'
        '500':
          description: Errore nel cambio di stato
          content:
            application/json:
                schema:
                  properties:
                    message:
                      type: string

  /app/graph:
      post:
        tags:
          - app
        summary: 'Crea un nuovo grafo'
        description: L'utente che consuma l'api deve essere registrato, attivo con ruolo 'Utente'
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NuovoGrafo'
        responses:
          '201':
            description: Grafo creato con successo
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Grafo'
          '500':
            description: INTERNAL SERVER ERROR
            content:
              application/json:
                  schema:
                    properties:
                      message:
                        type: string

  /app/graph/{id}:
    get:
      tags:
        - app
      summary: Recupera un grafo per id
      description: L'utente che consuma l'api deve essere registrato, attivo con ruolo 'Utente' o 'Amministratore'
      parameters:
        - name: id
          in: path
          description: ID del grafo da ritornare
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grafo'
        '404':
          description: NOT FOUND
          content:
            application/json:
                schema:
                  properties:
                    message:
                      type: string
        '500':
            description: INTERNAL SERVER ERROR
            content:
              application/json:
                  schema:
                    properties:
                      message:
                        type: string
    put:
      tags:
        - app
      summary: Cambia peso al grafo con id
      description: L'utente che consuma l'api deve essere registrato, attivo con ruolo 'Utente' o 'Amministratore'
      parameters:
        - name: id
          in: path
          description: ID del grafo da ritornare
          required: true
          schema:
            type: integer
            format: int64
      requestBody: 
        required: false
        content:
          application/json: 
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PesoArco'
      responses:
        '201':
          description: CREATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grafo'
        '404':
          description: NOT FOUND
          content:
            application/json:
                schema:
                  properties:
                    message:
                      type: string
        '500':
            description: INTERNAL SERVER ERROR
            content:
              application/json:
                  schema:
                    properties:
                      message:
                        type: string

  /app/graph/{id}/start/{start}/stop/{stop}:
    get:
      tags:
        - app
      summary: Esegue un grafo per id specificando i nodi start e stop
      description: L'utente che consuma l'api deve essere registrato, attivo con ruolo 'Utente'
      parameters:
        - name: id
          in: path
          description: ID del grafo da eseguire
          required: true
          schema:
            type: integer
            format: int64
        - name: start
          in: path
          description: nome del nodo di partenza
          required: true
          schema:
            type: string
        - name: stop
          in: path
          description: nome del nodo di arrivo
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  path:
                    type: array
                    items:
                      type: string
                    example: ["A", "B", "C", "D"]
                  cost:
                    type: number
                  execution_time:
                    type: number
        '404':
          description: NOT FOUND
          content:
            application/json:
                schema:
                  properties:
                    message:
                      type: string
        '500':
            description: INTERNAL SERVER ERROR
            content:
              application/json:
                  schema:
                    properties:
                      message:
                        type: string


  /app/graph/{id}/history:
    get:
      tags:
        - app
      summary: Recupera la history del grafo con chiave id
      description: L'utente che consuma l'api deve essere registrato, attivo con ruolo 'Utente' o Amministratore
      parameters:
        - name: id
          in: path
          description: ID del grafo da selezionare
          required: true
          schema:
            type: integer
            format: int64
        - name: formato
          in: query
          description: formato del report
          required: true
          schema:
            type: string
            default: json
            enum:
              - json
              - pdf
              - csv
        - name: periodo
          in: query
          description: perido di analisi (esempio 2023-08-09|2023-08-16)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/History'
            application/pdf:
              schema:
                type: string
                format: binary
            text/html:
              schema:
                type: string
        '404':
          description: NOT FOUND
          content:
              application/json:
                  schema:
                    properties:
                      message:
                        type: string
                        example: Dati non disponibili per i criteri di ricerca inseriti!
        '500':
            description: INTERNAL SERVER ERROR
            content:
              application/json:
                  schema:
                    properties:
                      message:
                        type: string
                        example: Errore nel calcolo della statistica!
            
  /app/graph/{id}/simulate:
      post:
        tags:
          - app
        summary: Simulazione con range di pesi (questa rotta è una POST di interrogazione, non apporta modifiche ai dati)
        description: L'utente che consuma l'api deve essere registrato, attivo con ruolo 'Utente' o 'Amministratore'
        parameters:
          - name: id
            in: path
            description: ID del grafo da simulare
            required: true
            schema:
              type: integer
              format: int64
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Simulazione'
        responses:
          '200':
            description: Simulazione avvenuta correttamente
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RisultatoSimulazione'
          '404':
            description: NOT FOUND
            content:
              application/json:
                  schema:
                    properties:
                      message:
                        type: string
          '500':
            description: INTERNAL SERVER ERROR
            content:
              application/json:
                  schema:
                    properties:
                      message:
                        type: string


security:
  - bearerAuth: []  


components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT 

  schemas:
    Utente:
      properties:
        email:
          type: string
          description: Indirizzo email
        role:
          type: string
          description: Ruolo dell'utente (Utente o Amministratore)
          enum:
              - Utente
              - Amministatore
        active:
          type: boolean
          description: Stato dell'utente
        name:
          type: string
          description: Nome
        surname:
          type: string
          description: Cognome
        credits:
          type: number
          description: Crediti residui
    RecordUtente:
        allOf:
          - $ref: '#/components/schemas/Utente'
        properties:
          id:
            type: number
            description: Primary Key
          createdAt:
            type: string
            description: Data di creazione
            format: date-time
          updatedAt:
            type: string
            description: Data di modifica
            format: date-time
    Refill:
      properties:
        email:
          type: string
          description: Indirizzo email
        refill:
          type: number
          description: Credito da ricaricare
    Grafo:
      properties:
        id:
            type: number
            description: Primary Key
        name:
          type: string
          description: Nome del grafo
        initialgraph:
          type: object
          description: Configurazione iniziale del grafo
          example: {"A":{"B":1},"B":{"A":1,"C":2,"D":4},"C":{"B":2,"D":1},"D":{"C":1,"B":4}}
        actualgraph:
          type: object
          description: Configurazione attuale del grafo
          example: {"A":{"B":1},"B":{"A":1,"C":2,"D":4},"C":{"B":2,"D":1},"D":{"C":1,"B":4}}
        user_id:
          type: number
          description: id dell'utente che ha creato il grafo
        createdAt:
            type: string
            description: Data di creazione
            format: date-time
        updatedAt:
          type: string
          description: Data di modifica
          format: date-time

    PesoArco:
      properties:
        node_start:
          type: string
          description: Nodo di partenza dell'arco
        node_stop:
          type: string
          description: Nodo di arrivo dell'arco
        peso:
          type: number
          description: Peso dell'arco


    Simulazione:
      properties:
        arco_start:
          type: string
          description: Nodo iniziale dell'arco
        arco_stop:
          type: string
          description: Nodo finale dell'arco
        peso_start:
          type: number
          description: Peso iniziale della simulazione
        peso_stop:
          type: number
          description: Peso finale della simulazione
        passo:
          type: number
          description: Passo della simulazione
        percorso_start:
          type: string
          description: Nodo di partenza della simulazione
        percorso_stop:
          type: string
          description: Nodo di arrivo della simulazione

    NuovoGrafo:
      properties:
        name:
          type: string
          example: mio_grafo
        initialgraph:
          type: object
          example: {"A":{"B":1},"B":{"A":1,"C":2,"D":4},"C":{"B":2,"D":1},"D":{"C":1,"B":4}}

    History:
      type: array
      items:
        properties:
          id:
            type: number
            description: Primary Key del record di modifica
          user_id:
            type: number
            description: Id del'utente che ha creato il grafo
          graph_id:
            type: number
            description: Id del grafo a cui è stata apportata la modifica dei pesi
          changes:
            type: array
            description: Lista delle modifiche richieste
            items:
              properties:
                node_start:
                  type: string
                  description: Nodo di partenza dell'arco
                node_stop:
                  type: string
                  description: Nodo di arrivo dell'arco
                peso:
                  type: number
                  description: Peso dell'arco
          createdAt:
              type: string
              description: Data di creazione
              format: date-time
          updatedAt:
            type: string
            description: Data di modifica
            format: date-time
          user:
            type: object
            properties:
              email:
                type: string
                description: Email dell'utente che ha fatto la modifica dei pesi
          graphModel:
            type: object
            properties:
              name:
                type: string
                description: Nome del grafo a cui sono stati modificati i pesi

    RisultatoSimulazione:
      properties:
        risultati:
          type: array
          items:
            properties:
              path:
                type: array
                items:
                  type: string
              costo:
                type: string
              peso:
                type: number
        best_result:
          type: number
        best_config:
          type: object

        
    


